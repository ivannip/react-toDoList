git add .
git commit -m "push to github"
git remote add origin git@github.com:ivannip/react-toDoList.git
git branch -M master
git push origin master

# git remote add heroku https://git.heroku.com/react-onlineshop0x.git
# git push heroku master

#Docker deploy MySQL
docker run --name mysql-db --restart on-failure -e MYSQL_ROOT_PASSWORD=reacttodolist -d arm64v8/mysql:oracle

brew install mysql
brew services start mysql
mysql_secure_installation
brew services stop mysql
mysql.server start
mysql.server stop
mysql -u root -p
CREATE DATABASE todolist_db
create user 'todolist'@'localhost' identified by 'password'
GRANT ALL PRIVILEGES ON todolist_db.* TO 'todolist'@'localhost'
FLUSH PRIVILEGES
SHOW GRANTS FOR 'todolist'@'localhost';

DATABASE_URL=mysql://todolist:password@localhost/todolist_db



#Docker deploy postgreSQL

mkdir -p ~/data/pg-node-orms
docker run --name pg-node-orms -p 5432:5432 -e POSTGRES_PASSWORD=hunter12 -e POSTGRES_USER=orm-user -e POSTGRES_DB=orm-db -v ~/data/pg-node-orms:/var/lib/postgresql/data -d postgres

#run psql
docker run -it --rm --link pg-node-orms:postgres postgres psql -h postgres -U orm-user orm-db

#remove pstgreSQL docker
docker stop pg-node-orms
docker rm pg-node-orms
sudo rm -rf ~/data/pg-node-orms

DATABASE_URL=postgres://orm-user:hunter12@localhost:5432/orm-db

#depoly the whole application to a single docker
docker build . -t todolist
docker run -p 3001:3001 -d todolist

# deploy docker to AWS
#https://www.freecodecamp.org/news/how-to-deploy-a-node-js-application-to-amazon-web-services-using-docker-81c2a2d7225b/

aws configure
aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i9o8d5w4
docker tag todolist:latest public.ecr.aws/i9o8d5w4/node-js-test:v1
docker push public.ecr.aws/i9o8d5w4/node-js-test:v1